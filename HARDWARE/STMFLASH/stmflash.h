#ifndef __STMFLASH_H__
#define __STMFLASH_H__
#include "sys.h"  
//////////////////////////////////////////////////////////////////////////////////	 
//本程序只供学习使用，未经作者许可，不得用于其它任何用途
//ALIENTEK战舰STM32开发板
//STM32 FLASH 驱动代码	   
//正点原子@ALIENTEK
//技术论坛:www.openedv.com
//修改日期:2012/9/13
//版本：V1.0
//版权所有，盗版必究。
//Copyright(C) 广州市星翼电子科技有限公司 2009-2019
//All rights reserved									  
//////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////
//用户根据自己的需要设置
#define STM32_FLASH_SIZE 64 	 		//所选STM32的FLASH容量大小(单位为K)
#define STM32_FLASH_WREN 1              //使能FLASH写入(0，不是能;1，使能)
//////////////////////////////////////////////////////////////////////////////////////////////////////

//FLASH起始地址
#define STM32_FLASH_BASE 0x08000000 	//STM32 FLASH的起始地址
//FLASH解锁键值

//保存一些参数的地址
#define FLASH_SAVE_ADDR  0X0800FC00		//设置FLASH 保存地址(必须为偶数，且其值要大于本代码所占用FLASH的大小+0X08000000)
//超时时间保存在FLASH中的地址
#define FLASH_PARAM_SIZE 4
#define FLASH_TIMEOUT_FLAG FLASH_SAVE_ADDR //timeout_flag的地址
#define FLASH_TIMEOUT FLASH_TIMEOUT_FLAG+FLASH_PARAM_SIZE //timeout的地址
//FTP参数保存在FLASH中的地址
#define FTP_PARAM_SIZE 32
#define FLASH_FIRMWARE_FLAG FLASH_TIMEOUT+FLASH_PARAM_SIZE //firmware_flag的地址
#define FLASH_FTP_SERVER FLASH_FIRMWARE_FLAG+FLASH_PARAM_SIZE //ftp服务器IP地址
#define FLASH_FTP_USERNAME FLASH_FTP_SERVER+FTP_PARAM_SIZE //ftp用户名
#define FLASH_FTP_PASSWD FLASH_FTP_USERNAME+FTP_PARAM_SIZE //ftp密码
#define FLASH_FTP_FILENAME FLASH_FTP_PASSWD+FTP_PARAM_SIZE //ftp文件名
#define FLASH_FTP_PATH FLASH_FTP_FILENAME+FTP_PARAM_SIZE //ftp路径
 

u16 STMFLASH_ReadHalfWord(u32 faddr);		  //读出半字  
void STMFLASH_WriteLenByte(u32 WriteAddr,u32 DataToWrite,u16 Len);	//指定地址开始写入指定长度的数据
u32 STMFLASH_ReadLenByte(u32 ReadAddr,u16 Len);						//指定地址开始读取指定长度数据
void STMFLASH_Write(u32 WriteAddr,u16 *pBuffer,u16 NumToWrite);		//从指定地址开始写入指定长度的数据
void STMFLASH_Read(u32 ReadAddr,u16 *pBuffer,u16 NumToRead);   		//从指定地址开始读出指定长度的数据

//测试写入
void Test_Write(u32 WriteAddr,u16 WriteData);								   
void Flash_Write_Number(u32 timeout_count, u32 wirte_addr);
u32 Flash_Read_Number(u32 wirte_addr);
void Flash_Write_Str(u32 flash_addr,u8 *write_buf,u32 size);
void Flash_Read_Str(u32 flash_addr,u8 *read_buf,u32 size);

#endif

















